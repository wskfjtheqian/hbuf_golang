// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: proto_test.proto

package hbuf_test

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProtoBuffSub struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	V1            int64                  `protobuf:"varint,1,opt,name=v1,proto3" json:"v1,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtoBuffSub) Reset() {
	*x = ProtoBuffSub{}
	mi := &file_proto_test_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoBuffSub) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoBuffSub) ProtoMessage() {}

func (x *ProtoBuffSub) ProtoReflect() protoreflect.Message {
	mi := &file_proto_test_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoBuffSub.ProtoReflect.Descriptor instead.
func (*ProtoBuffSub) Descriptor() ([]byte, []int) {
	return file_proto_test_proto_rawDescGZIP(), []int{0}
}

func (x *ProtoBuffSub) GetV1() int64 {
	if x != nil {
		return x.V1
	}
	return 0
}

type ProtoBuffTest struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	V1            int32                    `protobuf:"varint,1,opt,name=v1,proto3" json:"v1,omitempty"`
	V2            *int32                   `protobuf:"varint,2,opt,name=v2,proto3,oneof" json:"v2,omitempty"`
	V3            int64                    `protobuf:"varint,3,opt,name=v3,proto3" json:"v3,omitempty"`
	V4            *uint64                  `protobuf:"varint,4,opt,name=v4,proto3,oneof" json:"v4,omitempty"`
	V5            uint32                   `protobuf:"varint,5,opt,name=v5,proto3" json:"v5,omitempty"`
	V6            *uint32                  `protobuf:"varint,6,opt,name=v6,proto3,oneof" json:"v6,omitempty"`
	V7            uint64                   `protobuf:"varint,7,opt,name=v7,proto3" json:"v7,omitempty"`
	V8            *uint64                  `protobuf:"varint,8,opt,name=v8,proto3,oneof" json:"v8,omitempty"`
	V9            string                   `protobuf:"bytes,9,opt,name=v9,proto3" json:"v9,omitempty"`
	V10           *string                  `protobuf:"bytes,10,opt,name=v10,proto3,oneof" json:"v10,omitempty"`
	V11           []byte                   `protobuf:"bytes,11,opt,name=v11,proto3" json:"v11,omitempty"`
	V12           []byte                   `protobuf:"bytes,12,opt,name=v12,proto3,oneof" json:"v12,omitempty"`
	V13           float32                  `protobuf:"fixed32,13,opt,name=v13,proto3" json:"v13,omitempty"`
	V14           *float32                 `protobuf:"fixed32,14,opt,name=v14,proto3,oneof" json:"v14,omitempty"`
	V15           float64                  `protobuf:"fixed64,15,opt,name=v15,proto3" json:"v15,omitempty"`
	V16           *float64                 `protobuf:"fixed64,16,opt,name=v16,proto3,oneof" json:"v16,omitempty"`
	V17           bool                     `protobuf:"varint,17,opt,name=v17,proto3" json:"v17,omitempty"`
	V18           *bool                    `protobuf:"varint,18,opt,name=v18,proto3,oneof" json:"v18,omitempty"`
	V19           *ProtoBuffSub            `protobuf:"bytes,19,opt,name=v19,proto3" json:"v19,omitempty"`
	V20           *ProtoBuffSub            `protobuf:"bytes,20,opt,name=v20,proto3,oneof" json:"v20,omitempty"`
	V21           []int32                  `protobuf:"varint,21,rep,packed,name=v21,proto3" json:"v21,omitempty"`
	V22           []int64                  `protobuf:"varint,22,rep,packed,name=v22,proto3" json:"v22,omitempty"`
	V23           []uint32                 `protobuf:"varint,23,rep,packed,name=v23,proto3" json:"v23,omitempty"`
	V24           []uint64                 `protobuf:"varint,24,rep,packed,name=v24,proto3" json:"v24,omitempty"`
	V25           []float32                `protobuf:"fixed32,25,rep,packed,name=v25,proto3" json:"v25,omitempty"`
	V26           []float64                `protobuf:"fixed64,26,rep,packed,name=v26,proto3" json:"v26,omitempty"`
	V27           []bool                   `protobuf:"varint,27,rep,packed,name=v27,proto3" json:"v27,omitempty"`
	V28           []string                 `protobuf:"bytes,28,rep,name=v28,proto3" json:"v28,omitempty"`
	V29           [][]byte                 `protobuf:"bytes,29,rep,name=v29,proto3" json:"v29,omitempty"`
	V30           []*ProtoBuffSub          `protobuf:"bytes,30,rep,name=v30,proto3" json:"v30,omitempty"`
	V31           map[int32]int32          `protobuf:"bytes,31,rep,name=v31,proto3" json:"v31,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	V32           map[int32]int64          `protobuf:"bytes,32,rep,name=v32,proto3" json:"v32,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	V33           map[int32]uint32         `protobuf:"bytes,33,rep,name=v33,proto3" json:"v33,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	V34           map[int32]uint64         `protobuf:"bytes,34,rep,name=v34,proto3" json:"v34,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	V35           map[int32]float32        `protobuf:"bytes,35,rep,name=v35,proto3" json:"v35,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
	V36           map[int32]float64        `protobuf:"bytes,36,rep,name=v36,proto3" json:"v36,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	V37           map[int32]bool           `protobuf:"bytes,37,rep,name=v37,proto3" json:"v37,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	V38           map[int32]string         `protobuf:"bytes,38,rep,name=v38,proto3" json:"v38,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	V39           map[int32][]byte         `protobuf:"bytes,39,rep,name=v39,proto3" json:"v39,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	V40           map[int32]*ProtoBuffSub  `protobuf:"bytes,40,rep,name=v40,proto3" json:"v40,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	V41           map[int64]int32          `protobuf:"bytes,41,rep,name=v41,proto3" json:"v41,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	V42           map[int64]int64          `protobuf:"bytes,42,rep,name=v42,proto3" json:"v42,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	V43           map[int64]uint32         `protobuf:"bytes,43,rep,name=v43,proto3" json:"v43,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	V44           map[int64]uint64         `protobuf:"bytes,44,rep,name=v44,proto3" json:"v44,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	V45           map[int64]float32        `protobuf:"bytes,45,rep,name=v45,proto3" json:"v45,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
	V46           map[int64]float64        `protobuf:"bytes,46,rep,name=v46,proto3" json:"v46,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	V47           map[int64]bool           `protobuf:"bytes,47,rep,name=v47,proto3" json:"v47,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	V48           map[int64]string         `protobuf:"bytes,48,rep,name=v48,proto3" json:"v48,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	V49           map[int64][]byte         `protobuf:"bytes,49,rep,name=v49,proto3" json:"v49,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	V50           map[int64]*ProtoBuffSub  `protobuf:"bytes,50,rep,name=v50,proto3" json:"v50,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	V51           map[uint32]int32         `protobuf:"bytes,51,rep,name=v51,proto3" json:"v51,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	V52           map[uint32]int64         `protobuf:"bytes,52,rep,name=v52,proto3" json:"v52,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	V53           map[uint32]uint32        `protobuf:"bytes,53,rep,name=v53,proto3" json:"v53,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	V54           map[uint32]uint64        `protobuf:"bytes,54,rep,name=v54,proto3" json:"v54,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	V55           map[uint32]float32       `protobuf:"bytes,55,rep,name=v55,proto3" json:"v55,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
	V56           map[uint32]float64       `protobuf:"bytes,56,rep,name=v56,proto3" json:"v56,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	V57           map[uint32]bool          `protobuf:"bytes,57,rep,name=v57,proto3" json:"v57,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	V58           map[uint32]string        `protobuf:"bytes,58,rep,name=v58,proto3" json:"v58,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	V59           map[uint32][]byte        `protobuf:"bytes,59,rep,name=v59,proto3" json:"v59,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	V60           map[uint32]*ProtoBuffSub `protobuf:"bytes,60,rep,name=v60,proto3" json:"v60,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	V61           map[uint64]int32         `protobuf:"bytes,61,rep,name=v61,proto3" json:"v61,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	V62           map[uint64]int64         `protobuf:"bytes,62,rep,name=v62,proto3" json:"v62,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	V63           map[uint64]uint32        `protobuf:"bytes,63,rep,name=v63,proto3" json:"v63,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	V64           map[uint64]uint64        `protobuf:"bytes,64,rep,name=v64,proto3" json:"v64,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	V65           map[uint64]float32       `protobuf:"bytes,65,rep,name=v65,proto3" json:"v65,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
	V66           map[uint64]float64       `protobuf:"bytes,66,rep,name=v66,proto3" json:"v66,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	V67           map[uint64]bool          `protobuf:"bytes,67,rep,name=v67,proto3" json:"v67,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	V68           map[uint64]string        `protobuf:"bytes,68,rep,name=v68,proto3" json:"v68,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	V69           map[uint64][]byte        `protobuf:"bytes,69,rep,name=v69,proto3" json:"v69,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	V70           map[uint64]*ProtoBuffSub `protobuf:"bytes,70,rep,name=v70,proto3" json:"v70,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	V71           map[string]int32         `protobuf:"bytes,71,rep,name=v71,proto3" json:"v71,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	V72           map[string]int64         `protobuf:"bytes,72,rep,name=v72,proto3" json:"v72,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	V73           map[string]uint32        `protobuf:"bytes,73,rep,name=v73,proto3" json:"v73,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	V74           map[string]uint64        `protobuf:"bytes,74,rep,name=v74,proto3" json:"v74,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	V75           map[string]float32       `protobuf:"bytes,75,rep,name=v75,proto3" json:"v75,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
	V76           map[string]float64       `protobuf:"bytes,76,rep,name=v76,proto3" json:"v76,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	V77           map[string]bool          `protobuf:"bytes,77,rep,name=v77,proto3" json:"v77,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	V78           map[string]string        `protobuf:"bytes,78,rep,name=v78,proto3" json:"v78,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	V79           map[string][]byte        `protobuf:"bytes,79,rep,name=v79,proto3" json:"v79,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	V80           map[string]*ProtoBuffSub `protobuf:"bytes,80,rep,name=v80,proto3" json:"v80,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtoBuffTest) Reset() {
	*x = ProtoBuffTest{}
	mi := &file_proto_test_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoBuffTest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoBuffTest) ProtoMessage() {}

func (x *ProtoBuffTest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_test_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoBuffTest.ProtoReflect.Descriptor instead.
func (*ProtoBuffTest) Descriptor() ([]byte, []int) {
	return file_proto_test_proto_rawDescGZIP(), []int{1}
}

func (x *ProtoBuffTest) GetV1() int32 {
	if x != nil {
		return x.V1
	}
	return 0
}

func (x *ProtoBuffTest) GetV2() int32 {
	if x != nil && x.V2 != nil {
		return *x.V2
	}
	return 0
}

func (x *ProtoBuffTest) GetV3() int64 {
	if x != nil {
		return x.V3
	}
	return 0
}

func (x *ProtoBuffTest) GetV4() uint64 {
	if x != nil && x.V4 != nil {
		return *x.V4
	}
	return 0
}

func (x *ProtoBuffTest) GetV5() uint32 {
	if x != nil {
		return x.V5
	}
	return 0
}

func (x *ProtoBuffTest) GetV6() uint32 {
	if x != nil && x.V6 != nil {
		return *x.V6
	}
	return 0
}

func (x *ProtoBuffTest) GetV7() uint64 {
	if x != nil {
		return x.V7
	}
	return 0
}

func (x *ProtoBuffTest) GetV8() uint64 {
	if x != nil && x.V8 != nil {
		return *x.V8
	}
	return 0
}

func (x *ProtoBuffTest) GetV9() string {
	if x != nil {
		return x.V9
	}
	return ""
}

func (x *ProtoBuffTest) GetV10() string {
	if x != nil && x.V10 != nil {
		return *x.V10
	}
	return ""
}

func (x *ProtoBuffTest) GetV11() []byte {
	if x != nil {
		return x.V11
	}
	return nil
}

func (x *ProtoBuffTest) GetV12() []byte {
	if x != nil {
		return x.V12
	}
	return nil
}

func (x *ProtoBuffTest) GetV13() float32 {
	if x != nil {
		return x.V13
	}
	return 0
}

func (x *ProtoBuffTest) GetV14() float32 {
	if x != nil && x.V14 != nil {
		return *x.V14
	}
	return 0
}

func (x *ProtoBuffTest) GetV15() float64 {
	if x != nil {
		return x.V15
	}
	return 0
}

func (x *ProtoBuffTest) GetV16() float64 {
	if x != nil && x.V16 != nil {
		return *x.V16
	}
	return 0
}

func (x *ProtoBuffTest) GetV17() bool {
	if x != nil {
		return x.V17
	}
	return false
}

func (x *ProtoBuffTest) GetV18() bool {
	if x != nil && x.V18 != nil {
		return *x.V18
	}
	return false
}

func (x *ProtoBuffTest) GetV19() *ProtoBuffSub {
	if x != nil {
		return x.V19
	}
	return nil
}

func (x *ProtoBuffTest) GetV20() *ProtoBuffSub {
	if x != nil {
		return x.V20
	}
	return nil
}

func (x *ProtoBuffTest) GetV21() []int32 {
	if x != nil {
		return x.V21
	}
	return nil
}

func (x *ProtoBuffTest) GetV22() []int64 {
	if x != nil {
		return x.V22
	}
	return nil
}

func (x *ProtoBuffTest) GetV23() []uint32 {
	if x != nil {
		return x.V23
	}
	return nil
}

func (x *ProtoBuffTest) GetV24() []uint64 {
	if x != nil {
		return x.V24
	}
	return nil
}

func (x *ProtoBuffTest) GetV25() []float32 {
	if x != nil {
		return x.V25
	}
	return nil
}

func (x *ProtoBuffTest) GetV26() []float64 {
	if x != nil {
		return x.V26
	}
	return nil
}

func (x *ProtoBuffTest) GetV27() []bool {
	if x != nil {
		return x.V27
	}
	return nil
}

func (x *ProtoBuffTest) GetV28() []string {
	if x != nil {
		return x.V28
	}
	return nil
}

func (x *ProtoBuffTest) GetV29() [][]byte {
	if x != nil {
		return x.V29
	}
	return nil
}

func (x *ProtoBuffTest) GetV30() []*ProtoBuffSub {
	if x != nil {
		return x.V30
	}
	return nil
}

func (x *ProtoBuffTest) GetV31() map[int32]int32 {
	if x != nil {
		return x.V31
	}
	return nil
}

func (x *ProtoBuffTest) GetV32() map[int32]int64 {
	if x != nil {
		return x.V32
	}
	return nil
}

func (x *ProtoBuffTest) GetV33() map[int32]uint32 {
	if x != nil {
		return x.V33
	}
	return nil
}

func (x *ProtoBuffTest) GetV34() map[int32]uint64 {
	if x != nil {
		return x.V34
	}
	return nil
}

func (x *ProtoBuffTest) GetV35() map[int32]float32 {
	if x != nil {
		return x.V35
	}
	return nil
}

func (x *ProtoBuffTest) GetV36() map[int32]float64 {
	if x != nil {
		return x.V36
	}
	return nil
}

func (x *ProtoBuffTest) GetV37() map[int32]bool {
	if x != nil {
		return x.V37
	}
	return nil
}

func (x *ProtoBuffTest) GetV38() map[int32]string {
	if x != nil {
		return x.V38
	}
	return nil
}

func (x *ProtoBuffTest) GetV39() map[int32][]byte {
	if x != nil {
		return x.V39
	}
	return nil
}

func (x *ProtoBuffTest) GetV40() map[int32]*ProtoBuffSub {
	if x != nil {
		return x.V40
	}
	return nil
}

func (x *ProtoBuffTest) GetV41() map[int64]int32 {
	if x != nil {
		return x.V41
	}
	return nil
}

func (x *ProtoBuffTest) GetV42() map[int64]int64 {
	if x != nil {
		return x.V42
	}
	return nil
}

func (x *ProtoBuffTest) GetV43() map[int64]uint32 {
	if x != nil {
		return x.V43
	}
	return nil
}

func (x *ProtoBuffTest) GetV44() map[int64]uint64 {
	if x != nil {
		return x.V44
	}
	return nil
}

func (x *ProtoBuffTest) GetV45() map[int64]float32 {
	if x != nil {
		return x.V45
	}
	return nil
}

func (x *ProtoBuffTest) GetV46() map[int64]float64 {
	if x != nil {
		return x.V46
	}
	return nil
}

func (x *ProtoBuffTest) GetV47() map[int64]bool {
	if x != nil {
		return x.V47
	}
	return nil
}

func (x *ProtoBuffTest) GetV48() map[int64]string {
	if x != nil {
		return x.V48
	}
	return nil
}

func (x *ProtoBuffTest) GetV49() map[int64][]byte {
	if x != nil {
		return x.V49
	}
	return nil
}

func (x *ProtoBuffTest) GetV50() map[int64]*ProtoBuffSub {
	if x != nil {
		return x.V50
	}
	return nil
}

func (x *ProtoBuffTest) GetV51() map[uint32]int32 {
	if x != nil {
		return x.V51
	}
	return nil
}

func (x *ProtoBuffTest) GetV52() map[uint32]int64 {
	if x != nil {
		return x.V52
	}
	return nil
}

func (x *ProtoBuffTest) GetV53() map[uint32]uint32 {
	if x != nil {
		return x.V53
	}
	return nil
}

func (x *ProtoBuffTest) GetV54() map[uint32]uint64 {
	if x != nil {
		return x.V54
	}
	return nil
}

func (x *ProtoBuffTest) GetV55() map[uint32]float32 {
	if x != nil {
		return x.V55
	}
	return nil
}

func (x *ProtoBuffTest) GetV56() map[uint32]float64 {
	if x != nil {
		return x.V56
	}
	return nil
}

func (x *ProtoBuffTest) GetV57() map[uint32]bool {
	if x != nil {
		return x.V57
	}
	return nil
}

func (x *ProtoBuffTest) GetV58() map[uint32]string {
	if x != nil {
		return x.V58
	}
	return nil
}

func (x *ProtoBuffTest) GetV59() map[uint32][]byte {
	if x != nil {
		return x.V59
	}
	return nil
}

func (x *ProtoBuffTest) GetV60() map[uint32]*ProtoBuffSub {
	if x != nil {
		return x.V60
	}
	return nil
}

func (x *ProtoBuffTest) GetV61() map[uint64]int32 {
	if x != nil {
		return x.V61
	}
	return nil
}

func (x *ProtoBuffTest) GetV62() map[uint64]int64 {
	if x != nil {
		return x.V62
	}
	return nil
}

func (x *ProtoBuffTest) GetV63() map[uint64]uint32 {
	if x != nil {
		return x.V63
	}
	return nil
}

func (x *ProtoBuffTest) GetV64() map[uint64]uint64 {
	if x != nil {
		return x.V64
	}
	return nil
}

func (x *ProtoBuffTest) GetV65() map[uint64]float32 {
	if x != nil {
		return x.V65
	}
	return nil
}

func (x *ProtoBuffTest) GetV66() map[uint64]float64 {
	if x != nil {
		return x.V66
	}
	return nil
}

func (x *ProtoBuffTest) GetV67() map[uint64]bool {
	if x != nil {
		return x.V67
	}
	return nil
}

func (x *ProtoBuffTest) GetV68() map[uint64]string {
	if x != nil {
		return x.V68
	}
	return nil
}

func (x *ProtoBuffTest) GetV69() map[uint64][]byte {
	if x != nil {
		return x.V69
	}
	return nil
}

func (x *ProtoBuffTest) GetV70() map[uint64]*ProtoBuffSub {
	if x != nil {
		return x.V70
	}
	return nil
}

func (x *ProtoBuffTest) GetV71() map[string]int32 {
	if x != nil {
		return x.V71
	}
	return nil
}

func (x *ProtoBuffTest) GetV72() map[string]int64 {
	if x != nil {
		return x.V72
	}
	return nil
}

func (x *ProtoBuffTest) GetV73() map[string]uint32 {
	if x != nil {
		return x.V73
	}
	return nil
}

func (x *ProtoBuffTest) GetV74() map[string]uint64 {
	if x != nil {
		return x.V74
	}
	return nil
}

func (x *ProtoBuffTest) GetV75() map[string]float32 {
	if x != nil {
		return x.V75
	}
	return nil
}

func (x *ProtoBuffTest) GetV76() map[string]float64 {
	if x != nil {
		return x.V76
	}
	return nil
}

func (x *ProtoBuffTest) GetV77() map[string]bool {
	if x != nil {
		return x.V77
	}
	return nil
}

func (x *ProtoBuffTest) GetV78() map[string]string {
	if x != nil {
		return x.V78
	}
	return nil
}

func (x *ProtoBuffTest) GetV79() map[string][]byte {
	if x != nil {
		return x.V79
	}
	return nil
}

func (x *ProtoBuffTest) GetV80() map[string]*ProtoBuffSub {
	if x != nil {
		return x.V80
	}
	return nil
}

var File_proto_test_proto protoreflect.FileDescriptor

const file_proto_test_proto_rawDesc = "" +
	"\n" +
	"\x10proto_test.proto\x12\thbuf.test\"\x1e\n" +
	"\fProtoBuffSub\x12\x0e\n" +
	"\x02v1\x18\x01 \x01(\x03R\x02v1\"\xa91\n" +
	"\rProtoBuffTest\x12\x0e\n" +
	"\x02v1\x18\x01 \x01(\x05R\x02v1\x12\x13\n" +
	"\x02v2\x18\x02 \x01(\x05H\x00R\x02v2\x88\x01\x01\x12\x0e\n" +
	"\x02v3\x18\x03 \x01(\x03R\x02v3\x12\x13\n" +
	"\x02v4\x18\x04 \x01(\x04H\x01R\x02v4\x88\x01\x01\x12\x0e\n" +
	"\x02v5\x18\x05 \x01(\rR\x02v5\x12\x13\n" +
	"\x02v6\x18\x06 \x01(\rH\x02R\x02v6\x88\x01\x01\x12\x0e\n" +
	"\x02v7\x18\a \x01(\x04R\x02v7\x12\x13\n" +
	"\x02v8\x18\b \x01(\x04H\x03R\x02v8\x88\x01\x01\x12\x0e\n" +
	"\x02v9\x18\t \x01(\tR\x02v9\x12\x15\n" +
	"\x03v10\x18\n" +
	" \x01(\tH\x04R\x03v10\x88\x01\x01\x12\x10\n" +
	"\x03v11\x18\v \x01(\fR\x03v11\x12\x15\n" +
	"\x03v12\x18\f \x01(\fH\x05R\x03v12\x88\x01\x01\x12\x10\n" +
	"\x03v13\x18\r \x01(\x02R\x03v13\x12\x15\n" +
	"\x03v14\x18\x0e \x01(\x02H\x06R\x03v14\x88\x01\x01\x12\x10\n" +
	"\x03v15\x18\x0f \x01(\x01R\x03v15\x12\x15\n" +
	"\x03v16\x18\x10 \x01(\x01H\aR\x03v16\x88\x01\x01\x12\x10\n" +
	"\x03v17\x18\x11 \x01(\bR\x03v17\x12\x15\n" +
	"\x03v18\x18\x12 \x01(\bH\bR\x03v18\x88\x01\x01\x12)\n" +
	"\x03v19\x18\x13 \x01(\v2\x17.hbuf.test.ProtoBuffSubR\x03v19\x12.\n" +
	"\x03v20\x18\x14 \x01(\v2\x17.hbuf.test.ProtoBuffSubH\tR\x03v20\x88\x01\x01\x12\x10\n" +
	"\x03v21\x18\x15 \x03(\x05R\x03v21\x12\x10\n" +
	"\x03v22\x18\x16 \x03(\x03R\x03v22\x12\x10\n" +
	"\x03v23\x18\x17 \x03(\rR\x03v23\x12\x10\n" +
	"\x03v24\x18\x18 \x03(\x04R\x03v24\x12\x10\n" +
	"\x03v25\x18\x19 \x03(\x02R\x03v25\x12\x10\n" +
	"\x03v26\x18\x1a \x03(\x01R\x03v26\x12\x10\n" +
	"\x03v27\x18\x1b \x03(\bR\x03v27\x12\x10\n" +
	"\x03v28\x18\x1c \x03(\tR\x03v28\x12\x10\n" +
	"\x03v29\x18\x1d \x03(\fR\x03v29\x12)\n" +
	"\x03v30\x18\x1e \x03(\v2\x17.hbuf.test.ProtoBuffSubR\x03v30\x123\n" +
	"\x03v31\x18\x1f \x03(\v2!.hbuf.test.ProtoBuffTest.V31EntryR\x03v31\x123\n" +
	"\x03v32\x18  \x03(\v2!.hbuf.test.ProtoBuffTest.V32EntryR\x03v32\x123\n" +
	"\x03v33\x18! \x03(\v2!.hbuf.test.ProtoBuffTest.V33EntryR\x03v33\x123\n" +
	"\x03v34\x18\" \x03(\v2!.hbuf.test.ProtoBuffTest.V34EntryR\x03v34\x123\n" +
	"\x03v35\x18# \x03(\v2!.hbuf.test.ProtoBuffTest.V35EntryR\x03v35\x123\n" +
	"\x03v36\x18$ \x03(\v2!.hbuf.test.ProtoBuffTest.V36EntryR\x03v36\x123\n" +
	"\x03v37\x18% \x03(\v2!.hbuf.test.ProtoBuffTest.V37EntryR\x03v37\x123\n" +
	"\x03v38\x18& \x03(\v2!.hbuf.test.ProtoBuffTest.V38EntryR\x03v38\x123\n" +
	"\x03v39\x18' \x03(\v2!.hbuf.test.ProtoBuffTest.V39EntryR\x03v39\x123\n" +
	"\x03v40\x18( \x03(\v2!.hbuf.test.ProtoBuffTest.V40EntryR\x03v40\x123\n" +
	"\x03v41\x18) \x03(\v2!.hbuf.test.ProtoBuffTest.V41EntryR\x03v41\x123\n" +
	"\x03v42\x18* \x03(\v2!.hbuf.test.ProtoBuffTest.V42EntryR\x03v42\x123\n" +
	"\x03v43\x18+ \x03(\v2!.hbuf.test.ProtoBuffTest.V43EntryR\x03v43\x123\n" +
	"\x03v44\x18, \x03(\v2!.hbuf.test.ProtoBuffTest.V44EntryR\x03v44\x123\n" +
	"\x03v45\x18- \x03(\v2!.hbuf.test.ProtoBuffTest.V45EntryR\x03v45\x123\n" +
	"\x03v46\x18. \x03(\v2!.hbuf.test.ProtoBuffTest.V46EntryR\x03v46\x123\n" +
	"\x03v47\x18/ \x03(\v2!.hbuf.test.ProtoBuffTest.V47EntryR\x03v47\x123\n" +
	"\x03v48\x180 \x03(\v2!.hbuf.test.ProtoBuffTest.V48EntryR\x03v48\x123\n" +
	"\x03v49\x181 \x03(\v2!.hbuf.test.ProtoBuffTest.V49EntryR\x03v49\x123\n" +
	"\x03v50\x182 \x03(\v2!.hbuf.test.ProtoBuffTest.V50EntryR\x03v50\x123\n" +
	"\x03v51\x183 \x03(\v2!.hbuf.test.ProtoBuffTest.V51EntryR\x03v51\x123\n" +
	"\x03v52\x184 \x03(\v2!.hbuf.test.ProtoBuffTest.V52EntryR\x03v52\x123\n" +
	"\x03v53\x185 \x03(\v2!.hbuf.test.ProtoBuffTest.V53EntryR\x03v53\x123\n" +
	"\x03v54\x186 \x03(\v2!.hbuf.test.ProtoBuffTest.V54EntryR\x03v54\x123\n" +
	"\x03v55\x187 \x03(\v2!.hbuf.test.ProtoBuffTest.V55EntryR\x03v55\x123\n" +
	"\x03v56\x188 \x03(\v2!.hbuf.test.ProtoBuffTest.V56EntryR\x03v56\x123\n" +
	"\x03v57\x189 \x03(\v2!.hbuf.test.ProtoBuffTest.V57EntryR\x03v57\x123\n" +
	"\x03v58\x18: \x03(\v2!.hbuf.test.ProtoBuffTest.V58EntryR\x03v58\x123\n" +
	"\x03v59\x18; \x03(\v2!.hbuf.test.ProtoBuffTest.V59EntryR\x03v59\x123\n" +
	"\x03v60\x18< \x03(\v2!.hbuf.test.ProtoBuffTest.V60EntryR\x03v60\x123\n" +
	"\x03v61\x18= \x03(\v2!.hbuf.test.ProtoBuffTest.V61EntryR\x03v61\x123\n" +
	"\x03v62\x18> \x03(\v2!.hbuf.test.ProtoBuffTest.V62EntryR\x03v62\x123\n" +
	"\x03v63\x18? \x03(\v2!.hbuf.test.ProtoBuffTest.V63EntryR\x03v63\x123\n" +
	"\x03v64\x18@ \x03(\v2!.hbuf.test.ProtoBuffTest.V64EntryR\x03v64\x123\n" +
	"\x03v65\x18A \x03(\v2!.hbuf.test.ProtoBuffTest.V65EntryR\x03v65\x123\n" +
	"\x03v66\x18B \x03(\v2!.hbuf.test.ProtoBuffTest.V66EntryR\x03v66\x123\n" +
	"\x03v67\x18C \x03(\v2!.hbuf.test.ProtoBuffTest.V67EntryR\x03v67\x123\n" +
	"\x03v68\x18D \x03(\v2!.hbuf.test.ProtoBuffTest.V68EntryR\x03v68\x123\n" +
	"\x03v69\x18E \x03(\v2!.hbuf.test.ProtoBuffTest.V69EntryR\x03v69\x123\n" +
	"\x03v70\x18F \x03(\v2!.hbuf.test.ProtoBuffTest.V70EntryR\x03v70\x123\n" +
	"\x03v71\x18G \x03(\v2!.hbuf.test.ProtoBuffTest.V71EntryR\x03v71\x123\n" +
	"\x03v72\x18H \x03(\v2!.hbuf.test.ProtoBuffTest.V72EntryR\x03v72\x123\n" +
	"\x03v73\x18I \x03(\v2!.hbuf.test.ProtoBuffTest.V73EntryR\x03v73\x123\n" +
	"\x03v74\x18J \x03(\v2!.hbuf.test.ProtoBuffTest.V74EntryR\x03v74\x123\n" +
	"\x03v75\x18K \x03(\v2!.hbuf.test.ProtoBuffTest.V75EntryR\x03v75\x123\n" +
	"\x03v76\x18L \x03(\v2!.hbuf.test.ProtoBuffTest.V76EntryR\x03v76\x123\n" +
	"\x03v77\x18M \x03(\v2!.hbuf.test.ProtoBuffTest.V77EntryR\x03v77\x123\n" +
	"\x03v78\x18N \x03(\v2!.hbuf.test.ProtoBuffTest.V78EntryR\x03v78\x123\n" +
	"\x03v79\x18O \x03(\v2!.hbuf.test.ProtoBuffTest.V79EntryR\x03v79\x123\n" +
	"\x03v80\x18P \x03(\v2!.hbuf.test.ProtoBuffTest.V80EntryR\x03v80\x1a6\n" +
	"\bV31Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\x1a6\n" +
	"\bV32Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\x1a6\n" +
	"\bV33Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\rR\x05value:\x028\x01\x1a6\n" +
	"\bV34Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x04R\x05value:\x028\x01\x1a6\n" +
	"\bV35Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x02R\x05value:\x028\x01\x1a6\n" +
	"\bV36Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\x1a6\n" +
	"\bV37Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value:\x028\x01\x1a6\n" +
	"\bV38Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a6\n" +
	"\bV39Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\x1aO\n" +
	"\bV40Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12-\n" +
	"\x05value\x18\x02 \x01(\v2\x17.hbuf.test.ProtoBuffSubR\x05value:\x028\x01\x1a6\n" +
	"\bV41Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x03R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\x1a6\n" +
	"\bV42Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x03R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\x1a6\n" +
	"\bV43Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x03R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\rR\x05value:\x028\x01\x1a6\n" +
	"\bV44Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x03R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x04R\x05value:\x028\x01\x1a6\n" +
	"\bV45Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x03R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x02R\x05value:\x028\x01\x1a6\n" +
	"\bV46Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x03R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\x1a6\n" +
	"\bV47Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x03R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value:\x028\x01\x1a6\n" +
	"\bV48Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x03R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a6\n" +
	"\bV49Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x03R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\x1aO\n" +
	"\bV50Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x03R\x03key\x12-\n" +
	"\x05value\x18\x02 \x01(\v2\x17.hbuf.test.ProtoBuffSubR\x05value:\x028\x01\x1a6\n" +
	"\bV51Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\x1a6\n" +
	"\bV52Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\x1a6\n" +
	"\bV53Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\rR\x05value:\x028\x01\x1a6\n" +
	"\bV54Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x04R\x05value:\x028\x01\x1a6\n" +
	"\bV55Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x02R\x05value:\x028\x01\x1a6\n" +
	"\bV56Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\x1a6\n" +
	"\bV57Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value:\x028\x01\x1a6\n" +
	"\bV58Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a6\n" +
	"\bV59Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\x1aO\n" +
	"\bV60Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x12-\n" +
	"\x05value\x18\x02 \x01(\v2\x17.hbuf.test.ProtoBuffSubR\x05value:\x028\x01\x1a6\n" +
	"\bV61Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x04R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\x1a6\n" +
	"\bV62Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x04R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\x1a6\n" +
	"\bV63Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x04R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\rR\x05value:\x028\x01\x1a6\n" +
	"\bV64Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x04R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x04R\x05value:\x028\x01\x1a6\n" +
	"\bV65Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x04R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x02R\x05value:\x028\x01\x1a6\n" +
	"\bV66Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x04R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\x1a6\n" +
	"\bV67Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x04R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value:\x028\x01\x1a6\n" +
	"\bV68Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x04R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a6\n" +
	"\bV69Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x04R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\x1aO\n" +
	"\bV70Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x04R\x03key\x12-\n" +
	"\x05value\x18\x02 \x01(\v2\x17.hbuf.test.ProtoBuffSubR\x05value:\x028\x01\x1a6\n" +
	"\bV71Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\x1a6\n" +
	"\bV72Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\x1a6\n" +
	"\bV73Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\rR\x05value:\x028\x01\x1a6\n" +
	"\bV74Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x04R\x05value:\x028\x01\x1a6\n" +
	"\bV75Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x02R\x05value:\x028\x01\x1a6\n" +
	"\bV76Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\x1a6\n" +
	"\bV77Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value:\x028\x01\x1a6\n" +
	"\bV78Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a6\n" +
	"\bV79Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\x1aO\n" +
	"\bV80Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12-\n" +
	"\x05value\x18\x02 \x01(\v2\x17.hbuf.test.ProtoBuffSubR\x05value:\x028\x01B\x05\n" +
	"\x03_v2B\x05\n" +
	"\x03_v4B\x05\n" +
	"\x03_v6B\x05\n" +
	"\x03_v8B\x06\n" +
	"\x04_v10B\x06\n" +
	"\x04_v12B\x06\n" +
	"\x04_v14B\x06\n" +
	"\x04_v16B\x06\n" +
	"\x04_v18B\x06\n" +
	"\x04_v20B\rZ\v.;hbuf_testb\x06proto3"

var (
	file_proto_test_proto_rawDescOnce sync.Once
	file_proto_test_proto_rawDescData []byte
)

func file_proto_test_proto_rawDescGZIP() []byte {
	file_proto_test_proto_rawDescOnce.Do(func() {
		file_proto_test_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_test_proto_rawDesc), len(file_proto_test_proto_rawDesc)))
	})
	return file_proto_test_proto_rawDescData
}

var file_proto_test_proto_msgTypes = make([]protoimpl.MessageInfo, 52)
var file_proto_test_proto_goTypes = []any{
	(*ProtoBuffSub)(nil),  // 0: hbuf.test.ProtoBuffSub
	(*ProtoBuffTest)(nil), // 1: hbuf.test.ProtoBuffTest
	nil,                   // 2: hbuf.test.ProtoBuffTest.V31Entry
	nil,                   // 3: hbuf.test.ProtoBuffTest.V32Entry
	nil,                   // 4: hbuf.test.ProtoBuffTest.V33Entry
	nil,                   // 5: hbuf.test.ProtoBuffTest.V34Entry
	nil,                   // 6: hbuf.test.ProtoBuffTest.V35Entry
	nil,                   // 7: hbuf.test.ProtoBuffTest.V36Entry
	nil,                   // 8: hbuf.test.ProtoBuffTest.V37Entry
	nil,                   // 9: hbuf.test.ProtoBuffTest.V38Entry
	nil,                   // 10: hbuf.test.ProtoBuffTest.V39Entry
	nil,                   // 11: hbuf.test.ProtoBuffTest.V40Entry
	nil,                   // 12: hbuf.test.ProtoBuffTest.V41Entry
	nil,                   // 13: hbuf.test.ProtoBuffTest.V42Entry
	nil,                   // 14: hbuf.test.ProtoBuffTest.V43Entry
	nil,                   // 15: hbuf.test.ProtoBuffTest.V44Entry
	nil,                   // 16: hbuf.test.ProtoBuffTest.V45Entry
	nil,                   // 17: hbuf.test.ProtoBuffTest.V46Entry
	nil,                   // 18: hbuf.test.ProtoBuffTest.V47Entry
	nil,                   // 19: hbuf.test.ProtoBuffTest.V48Entry
	nil,                   // 20: hbuf.test.ProtoBuffTest.V49Entry
	nil,                   // 21: hbuf.test.ProtoBuffTest.V50Entry
	nil,                   // 22: hbuf.test.ProtoBuffTest.V51Entry
	nil,                   // 23: hbuf.test.ProtoBuffTest.V52Entry
	nil,                   // 24: hbuf.test.ProtoBuffTest.V53Entry
	nil,                   // 25: hbuf.test.ProtoBuffTest.V54Entry
	nil,                   // 26: hbuf.test.ProtoBuffTest.V55Entry
	nil,                   // 27: hbuf.test.ProtoBuffTest.V56Entry
	nil,                   // 28: hbuf.test.ProtoBuffTest.V57Entry
	nil,                   // 29: hbuf.test.ProtoBuffTest.V58Entry
	nil,                   // 30: hbuf.test.ProtoBuffTest.V59Entry
	nil,                   // 31: hbuf.test.ProtoBuffTest.V60Entry
	nil,                   // 32: hbuf.test.ProtoBuffTest.V61Entry
	nil,                   // 33: hbuf.test.ProtoBuffTest.V62Entry
	nil,                   // 34: hbuf.test.ProtoBuffTest.V63Entry
	nil,                   // 35: hbuf.test.ProtoBuffTest.V64Entry
	nil,                   // 36: hbuf.test.ProtoBuffTest.V65Entry
	nil,                   // 37: hbuf.test.ProtoBuffTest.V66Entry
	nil,                   // 38: hbuf.test.ProtoBuffTest.V67Entry
	nil,                   // 39: hbuf.test.ProtoBuffTest.V68Entry
	nil,                   // 40: hbuf.test.ProtoBuffTest.V69Entry
	nil,                   // 41: hbuf.test.ProtoBuffTest.V70Entry
	nil,                   // 42: hbuf.test.ProtoBuffTest.V71Entry
	nil,                   // 43: hbuf.test.ProtoBuffTest.V72Entry
	nil,                   // 44: hbuf.test.ProtoBuffTest.V73Entry
	nil,                   // 45: hbuf.test.ProtoBuffTest.V74Entry
	nil,                   // 46: hbuf.test.ProtoBuffTest.V75Entry
	nil,                   // 47: hbuf.test.ProtoBuffTest.V76Entry
	nil,                   // 48: hbuf.test.ProtoBuffTest.V77Entry
	nil,                   // 49: hbuf.test.ProtoBuffTest.V78Entry
	nil,                   // 50: hbuf.test.ProtoBuffTest.V79Entry
	nil,                   // 51: hbuf.test.ProtoBuffTest.V80Entry
}
var file_proto_test_proto_depIdxs = []int32{
	0,  // 0: hbuf.test.ProtoBuffTest.v19:type_name -> hbuf.test.ProtoBuffSub
	0,  // 1: hbuf.test.ProtoBuffTest.v20:type_name -> hbuf.test.ProtoBuffSub
	0,  // 2: hbuf.test.ProtoBuffTest.v30:type_name -> hbuf.test.ProtoBuffSub
	2,  // 3: hbuf.test.ProtoBuffTest.v31:type_name -> hbuf.test.ProtoBuffTest.V31Entry
	3,  // 4: hbuf.test.ProtoBuffTest.v32:type_name -> hbuf.test.ProtoBuffTest.V32Entry
	4,  // 5: hbuf.test.ProtoBuffTest.v33:type_name -> hbuf.test.ProtoBuffTest.V33Entry
	5,  // 6: hbuf.test.ProtoBuffTest.v34:type_name -> hbuf.test.ProtoBuffTest.V34Entry
	6,  // 7: hbuf.test.ProtoBuffTest.v35:type_name -> hbuf.test.ProtoBuffTest.V35Entry
	7,  // 8: hbuf.test.ProtoBuffTest.v36:type_name -> hbuf.test.ProtoBuffTest.V36Entry
	8,  // 9: hbuf.test.ProtoBuffTest.v37:type_name -> hbuf.test.ProtoBuffTest.V37Entry
	9,  // 10: hbuf.test.ProtoBuffTest.v38:type_name -> hbuf.test.ProtoBuffTest.V38Entry
	10, // 11: hbuf.test.ProtoBuffTest.v39:type_name -> hbuf.test.ProtoBuffTest.V39Entry
	11, // 12: hbuf.test.ProtoBuffTest.v40:type_name -> hbuf.test.ProtoBuffTest.V40Entry
	12, // 13: hbuf.test.ProtoBuffTest.v41:type_name -> hbuf.test.ProtoBuffTest.V41Entry
	13, // 14: hbuf.test.ProtoBuffTest.v42:type_name -> hbuf.test.ProtoBuffTest.V42Entry
	14, // 15: hbuf.test.ProtoBuffTest.v43:type_name -> hbuf.test.ProtoBuffTest.V43Entry
	15, // 16: hbuf.test.ProtoBuffTest.v44:type_name -> hbuf.test.ProtoBuffTest.V44Entry
	16, // 17: hbuf.test.ProtoBuffTest.v45:type_name -> hbuf.test.ProtoBuffTest.V45Entry
	17, // 18: hbuf.test.ProtoBuffTest.v46:type_name -> hbuf.test.ProtoBuffTest.V46Entry
	18, // 19: hbuf.test.ProtoBuffTest.v47:type_name -> hbuf.test.ProtoBuffTest.V47Entry
	19, // 20: hbuf.test.ProtoBuffTest.v48:type_name -> hbuf.test.ProtoBuffTest.V48Entry
	20, // 21: hbuf.test.ProtoBuffTest.v49:type_name -> hbuf.test.ProtoBuffTest.V49Entry
	21, // 22: hbuf.test.ProtoBuffTest.v50:type_name -> hbuf.test.ProtoBuffTest.V50Entry
	22, // 23: hbuf.test.ProtoBuffTest.v51:type_name -> hbuf.test.ProtoBuffTest.V51Entry
	23, // 24: hbuf.test.ProtoBuffTest.v52:type_name -> hbuf.test.ProtoBuffTest.V52Entry
	24, // 25: hbuf.test.ProtoBuffTest.v53:type_name -> hbuf.test.ProtoBuffTest.V53Entry
	25, // 26: hbuf.test.ProtoBuffTest.v54:type_name -> hbuf.test.ProtoBuffTest.V54Entry
	26, // 27: hbuf.test.ProtoBuffTest.v55:type_name -> hbuf.test.ProtoBuffTest.V55Entry
	27, // 28: hbuf.test.ProtoBuffTest.v56:type_name -> hbuf.test.ProtoBuffTest.V56Entry
	28, // 29: hbuf.test.ProtoBuffTest.v57:type_name -> hbuf.test.ProtoBuffTest.V57Entry
	29, // 30: hbuf.test.ProtoBuffTest.v58:type_name -> hbuf.test.ProtoBuffTest.V58Entry
	30, // 31: hbuf.test.ProtoBuffTest.v59:type_name -> hbuf.test.ProtoBuffTest.V59Entry
	31, // 32: hbuf.test.ProtoBuffTest.v60:type_name -> hbuf.test.ProtoBuffTest.V60Entry
	32, // 33: hbuf.test.ProtoBuffTest.v61:type_name -> hbuf.test.ProtoBuffTest.V61Entry
	33, // 34: hbuf.test.ProtoBuffTest.v62:type_name -> hbuf.test.ProtoBuffTest.V62Entry
	34, // 35: hbuf.test.ProtoBuffTest.v63:type_name -> hbuf.test.ProtoBuffTest.V63Entry
	35, // 36: hbuf.test.ProtoBuffTest.v64:type_name -> hbuf.test.ProtoBuffTest.V64Entry
	36, // 37: hbuf.test.ProtoBuffTest.v65:type_name -> hbuf.test.ProtoBuffTest.V65Entry
	37, // 38: hbuf.test.ProtoBuffTest.v66:type_name -> hbuf.test.ProtoBuffTest.V66Entry
	38, // 39: hbuf.test.ProtoBuffTest.v67:type_name -> hbuf.test.ProtoBuffTest.V67Entry
	39, // 40: hbuf.test.ProtoBuffTest.v68:type_name -> hbuf.test.ProtoBuffTest.V68Entry
	40, // 41: hbuf.test.ProtoBuffTest.v69:type_name -> hbuf.test.ProtoBuffTest.V69Entry
	41, // 42: hbuf.test.ProtoBuffTest.v70:type_name -> hbuf.test.ProtoBuffTest.V70Entry
	42, // 43: hbuf.test.ProtoBuffTest.v71:type_name -> hbuf.test.ProtoBuffTest.V71Entry
	43, // 44: hbuf.test.ProtoBuffTest.v72:type_name -> hbuf.test.ProtoBuffTest.V72Entry
	44, // 45: hbuf.test.ProtoBuffTest.v73:type_name -> hbuf.test.ProtoBuffTest.V73Entry
	45, // 46: hbuf.test.ProtoBuffTest.v74:type_name -> hbuf.test.ProtoBuffTest.V74Entry
	46, // 47: hbuf.test.ProtoBuffTest.v75:type_name -> hbuf.test.ProtoBuffTest.V75Entry
	47, // 48: hbuf.test.ProtoBuffTest.v76:type_name -> hbuf.test.ProtoBuffTest.V76Entry
	48, // 49: hbuf.test.ProtoBuffTest.v77:type_name -> hbuf.test.ProtoBuffTest.V77Entry
	49, // 50: hbuf.test.ProtoBuffTest.v78:type_name -> hbuf.test.ProtoBuffTest.V78Entry
	50, // 51: hbuf.test.ProtoBuffTest.v79:type_name -> hbuf.test.ProtoBuffTest.V79Entry
	51, // 52: hbuf.test.ProtoBuffTest.v80:type_name -> hbuf.test.ProtoBuffTest.V80Entry
	0,  // 53: hbuf.test.ProtoBuffTest.V40Entry.value:type_name -> hbuf.test.ProtoBuffSub
	0,  // 54: hbuf.test.ProtoBuffTest.V50Entry.value:type_name -> hbuf.test.ProtoBuffSub
	0,  // 55: hbuf.test.ProtoBuffTest.V60Entry.value:type_name -> hbuf.test.ProtoBuffSub
	0,  // 56: hbuf.test.ProtoBuffTest.V70Entry.value:type_name -> hbuf.test.ProtoBuffSub
	0,  // 57: hbuf.test.ProtoBuffTest.V80Entry.value:type_name -> hbuf.test.ProtoBuffSub
	58, // [58:58] is the sub-list for method output_type
	58, // [58:58] is the sub-list for method input_type
	58, // [58:58] is the sub-list for extension type_name
	58, // [58:58] is the sub-list for extension extendee
	0,  // [0:58] is the sub-list for field type_name
}

func init() { file_proto_test_proto_init() }
func file_proto_test_proto_init() {
	if File_proto_test_proto != nil {
		return
	}
	file_proto_test_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_test_proto_rawDesc), len(file_proto_test_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   52,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_test_proto_goTypes,
		DependencyIndexes: file_proto_test_proto_depIdxs,
		MessageInfos:      file_proto_test_proto_msgTypes,
	}.Build()
	File_proto_test_proto = out.File
	file_proto_test_proto_goTypes = nil
	file_proto_test_proto_depIdxs = nil
}
